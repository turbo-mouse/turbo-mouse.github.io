{"version":3,"file":"packs/js/features/domain_blocks-1ed1eb47212b91870193.chunk.js","mappings":"qPAAyQA,GAAS,QAAe,CAACC,mBAAmB,CAAC,GAAK,qCAAqC,eAAiB,sBAAsBC,cAAc,CAAC,GAAK,yBAAyB,eAAiB,qBAST,EATyC,SAAgBC,GAAM,IAAIC,EAAOD,EAAKC,OAAWC,GAAS,UAAqBC,GAAK,EAAAC,EAAA,KAShe,OAAmB,OAAK,KAAO,CAACC,WAAW,SAASC,eAAe,UAAUC,MAAM,EAAEC,UAAU,YAAO,GAAoB,OAAK,KAAK,CAACC,IAAI,aAAQ,EAAOR,IAAqB,OAAK,KAAW,CAACS,cAAc,UAAUC,IAAI,EAAQ,KAA+BC,MAAMT,EAAKU,cAAchB,EAASE,cAAc,CAACE,OAAOA,IAASa,QAAnY,WAA+BZ,GAAS,QAAcD,GAAS,IAAmW,E,QCT0E,GAAS,QAAe,CAACc,QAAQ,CAAC,GAAK,uBAAuB,eAAiB,kBAAkBhB,cAAc,CAAC,GAAK,yBAAyB,eAAiB,qBAAyBiB,EAAe,KAAS,SAASd,GAAUA,GAAS,UAAsB,GAAE,IAAI,CAACe,SAAQ,IAAk8B,EAA16B,WAAwB,IAAIf,GAAS,UAAqBC,GAAK,EAAAC,EAAA,KAAcc,GAAQ,SAAe,SAASC,GAAO,OAAOA,EAAMC,aAAaC,OAAOC,KAAM,IAAOC,GAAQ,SAAe,SAASJ,GAAO,QAAQA,EAAMC,aAAaC,OAAOG,IAAK,IAAkE,GAA/D,aAAgB,WAAWtB,GAAS,UAAqB,GAAE,KAAQgB,EAAS,OAAmB,OAAK,KAAO,CAAC,OAAE,GAAoB,OAAK,KAAQ,CAAC,IAAK,IAAIO,GAA0B,OAAK,IAAiB,CAACC,GAAG,6BAA6BC,eAAe,qCAAqC,OAAmB,OAAK,KAAO,CAACC,MAAMzB,EAAKU,cAAc,EAASE,eAAU,GAAoB,OAAK,IAAe,CAACc,UAAU,gBAAgBC,WAAW,WAAsB,OAAOd,EAAed,EAAU,EAAEqB,QAAQA,EAAQE,aAAaA,EAAajB,UAAU,sDAAiD,EAAOU,EAAQa,KAAI,SAAS9B,GAAQ,OAAmB,OAAK,EAAO,CAACA,OAAOA,GAAQA,EAAQ,KAAK,C","sources":["webpack://soapbox/./app/soapbox/components/domain.tsx","webpack://soapbox/./app/soapbox/features/domain-blocks/index.tsx"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import React from'react';import{defineMessages,useIntl}from'react-intl';import{unblockDomain}from'soapbox/actions/domain-blocks';import{useAppDispatch}from'soapbox/hooks';import{HStack,IconButton,Text}from'./ui';var messages=defineMessages({blockDomainConfirm:{\"id\":\"confirmations.domain_block.confirm\",\"defaultMessage\":\"Hide entire domain\"},unblockDomain:{\"id\":\"account.unblock_domain\",\"defaultMessage\":\"Unhide {domain}\"}});var Domain=function Domain(_ref){var domain=_ref.domain;var dispatch=useAppDispatch();var intl=useIntl();// const onBlockDomain = () => {\n//   dispatch(openModal('CONFIRM', {\n//     icon: require('@tabler/icons/ban.svg'),\n//     heading: <FormattedMessage id='confirmations.domain_block.heading' defaultMessage='Block {domain}' values={{ domain }} />,\n//     message: <FormattedMessage id='confirmations.domain_block.message' defaultMessage='Are you really, really sure you want to block the entire {domain}? In most cases a few targeted blocks or mutes are sufficient and preferable.' values={{ domain: <strong>{domain}</strong> }} />,\n//     confirm: intl.formatMessage(messages.blockDomainConfirm),\n//     onConfirm: () => dispatch(blockDomain(domain)),\n//   }));\n// }\nvar handleDomainUnblock=function handleDomainUnblock(){dispatch(unblockDomain(domain));};return/*#__PURE__*/_jsx(HStack,{alignItems:\"center\",justifyContent:\"between\",space:1,className:\"p-2\"},void 0,/*#__PURE__*/_jsx(Text,{tag:\"span\"},void 0,domain),/*#__PURE__*/_jsx(IconButton,{iconClassName:\"h-5 w-5\",src:require('@tabler/icons/lock-open.svg'),title:intl.formatMessage(messages.unblockDomain,{domain:domain}),onClick:handleDomainUnblock}));};export default Domain;","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import\"core-js/modules/es.array.map.js\";import debounce from'lodash/debounce';import React from'react';import{defineMessages,useIntl,FormattedMessage}from'react-intl';import{fetchDomainBlocks,expandDomainBlocks}from'soapbox/actions/domain-blocks';import Domain from'soapbox/components/domain';import ScrollableList from'soapbox/components/scrollable-list';import{Column,Spinner}from'soapbox/components/ui';import{useAppDispatch,useAppSelector}from'soapbox/hooks';var messages=defineMessages({heading:{\"id\":\"column.domain_blocks\",\"defaultMessage\":\"Hidden domains\"},unblockDomain:{\"id\":\"account.unblock_domain\",\"defaultMessage\":\"Unhide {domain}\"}});var handleLoadMore=debounce(function(dispatch){dispatch(expandDomainBlocks());},300,{leading:true});var DomainBlocks=function DomainBlocks(){var dispatch=useAppDispatch();var intl=useIntl();var domains=useAppSelector(function(state){return state.domain_lists.blocks.items;});var hasMore=useAppSelector(function(state){return!!state.domain_lists.blocks.next;});React.useEffect(function(){dispatch(fetchDomainBlocks());},[]);if(!domains){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(Spinner,{}));}var emptyMessage=/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.domain_blocks\",defaultMessage:\"There are no hidden domains yet.\"});return/*#__PURE__*/_jsx(Column,{label:intl.formatMessage(messages.heading)},void 0,/*#__PURE__*/_jsx(ScrollableList,{scrollKey:\"domain_blocks\",onLoadMore:function onLoadMore(){return handleLoadMore(dispatch);},hasMore:hasMore,emptyMessage:emptyMessage,className:\"divide-y divide-gray-200 dark:divide-gray-800\"},void 0,domains.map(function(domain){return/*#__PURE__*/_jsx(Domain,{domain:domain},domain);})));};export default DomainBlocks;"],"names":["messages","blockDomainConfirm","unblockDomain","_ref","domain","dispatch","intl","useIntl","alignItems","justifyContent","space","className","tag","iconClassName","src","title","formatMessage","onClick","heading","handleLoadMore","leading","domains","state","domain_lists","blocks","items","hasMore","next","emptyMessage","id","defaultMessage","label","scrollKey","onLoadMore","map"],"sourceRoot":""}