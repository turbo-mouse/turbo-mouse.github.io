{"version":3,"file":"packs/js/features/compose-2ca9296d9c095cecfdd3.chunk.js","mappings":"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","sources":["webpack://soapbox/./node_modules/exif-js/exif.js","webpack://soapbox/./app/soapbox/features/ui/components/upload-area.tsx"],"sourcesContent":["var _typeof = require(\"@babel/runtime/helpers/typeof\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.string.match.js\");\nrequire(\"core-js/modules/es.string.replace.js\");\nrequire(\"core-js/modules/web.atob.js\");\nrequire(\"core-js/modules/web.dom-exception.constructor.js\");\nrequire(\"core-js/modules/web.dom-exception.stack.js\");\nrequire(\"core-js/modules/web.dom-exception.to-string-tag.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.array.iterator.js\");\nrequire(\"core-js/modules/es.typed-array.uint8-array.js\");\nrequire(\"core-js/modules/es.typed-array.at.js\");\nrequire(\"core-js/modules/es.typed-array.copy-within.js\");\nrequire(\"core-js/modules/es.typed-array.every.js\");\nrequire(\"core-js/modules/es.typed-array.fill.js\");\nrequire(\"core-js/modules/es.typed-array.filter.js\");\nrequire(\"core-js/modules/es.typed-array.find.js\");\nrequire(\"core-js/modules/es.typed-array.find-index.js\");\nrequire(\"core-js/modules/es.typed-array.find-last.js\");\nrequire(\"core-js/modules/es.typed-array.find-last-index.js\");\nrequire(\"core-js/modules/es.typed-array.for-each.js\");\nrequire(\"core-js/modules/es.typed-array.includes.js\");\nrequire(\"core-js/modules/es.typed-array.index-of.js\");\nrequire(\"core-js/modules/es.typed-array.iterator.js\");\nrequire(\"core-js/modules/es.typed-array.join.js\");\nrequire(\"core-js/modules/es.typed-array.last-index-of.js\");\nrequire(\"core-js/modules/es.typed-array.map.js\");\nrequire(\"core-js/modules/es.typed-array.reduce.js\");\nrequire(\"core-js/modules/es.typed-array.reduce-right.js\");\nrequire(\"core-js/modules/es.typed-array.reverse.js\");\nrequire(\"core-js/modules/es.typed-array.set.js\");\nrequire(\"core-js/modules/es.typed-array.slice.js\");\nrequire(\"core-js/modules/es.typed-array.some.js\");\nrequire(\"core-js/modules/es.typed-array.sort.js\");\nrequire(\"core-js/modules/es.typed-array.to-locale-string.js\");\nrequire(\"core-js/modules/es.typed-array.to-string.js\");\nrequire(\"core-js/modules/es.regexp.test.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.array.index-of.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\n(function () {\n  var debug = false;\n  var root = this;\n  var EXIF = function EXIF(obj) {\n    if (obj instanceof EXIF) return obj;\n    if (!(this instanceof EXIF)) return new EXIF(obj);\n    this.EXIFwrapped = obj;\n  };\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = EXIF;\n    }\n    exports.EXIF = EXIF;\n  } else {\n    root.EXIF = EXIF;\n  }\n  var ExifTags = EXIF.Tags = {\n    // version tags\n    0x9000: \"ExifVersion\",\n    // EXIF version\n    0xA000: \"FlashpixVersion\",\n    // Flashpix format version\n\n    // colorspace tags\n    0xA001: \"ColorSpace\",\n    // Color space information tag\n\n    // image configuration\n    0xA002: \"PixelXDimension\",\n    // Valid width of meaningful image\n    0xA003: \"PixelYDimension\",\n    // Valid height of meaningful image\n    0x9101: \"ComponentsConfiguration\",\n    // Information about channels\n    0x9102: \"CompressedBitsPerPixel\",\n    // Compressed bits per pixel\n\n    // user information\n    0x927C: \"MakerNote\",\n    // Any desired information written by the manufacturer\n    0x9286: \"UserComment\",\n    // Comments by user\n\n    // related file\n    0xA004: \"RelatedSoundFile\",\n    // Name of related sound file\n\n    // date and time\n    0x9003: \"DateTimeOriginal\",\n    // Date and time when the original image was generated\n    0x9004: \"DateTimeDigitized\",\n    // Date and time when the image was stored digitally\n    0x9290: \"SubsecTime\",\n    // Fractions of seconds for DateTime\n    0x9291: \"SubsecTimeOriginal\",\n    // Fractions of seconds for DateTimeOriginal\n    0x9292: \"SubsecTimeDigitized\",\n    // Fractions of seconds for DateTimeDigitized\n\n    // picture-taking conditions\n    0x829A: \"ExposureTime\",\n    // Exposure time (in seconds)\n    0x829D: \"FNumber\",\n    // F number\n    0x8822: \"ExposureProgram\",\n    // Exposure program\n    0x8824: \"SpectralSensitivity\",\n    // Spectral sensitivity\n    0x8827: \"ISOSpeedRatings\",\n    // ISO speed rating\n    0x8828: \"OECF\",\n    // Optoelectric conversion factor\n    0x9201: \"ShutterSpeedValue\",\n    // Shutter speed\n    0x9202: \"ApertureValue\",\n    // Lens aperture\n    0x9203: \"BrightnessValue\",\n    // Value of brightness\n    0x9204: \"ExposureBias\",\n    // Exposure bias\n    0x9205: \"MaxApertureValue\",\n    // Smallest F number of lens\n    0x9206: \"SubjectDistance\",\n    // Distance to subject in meters\n    0x9207: \"MeteringMode\",\n    // Metering mode\n    0x9208: \"LightSource\",\n    // Kind of light source\n    0x9209: \"Flash\",\n    // Flash status\n    0x9214: \"SubjectArea\",\n    // Location and area of main subject\n    0x920A: \"FocalLength\",\n    // Focal length of the lens in mm\n    0xA20B: \"FlashEnergy\",\n    // Strobe energy in BCPS\n    0xA20C: \"SpatialFrequencyResponse\",\n    //\n    0xA20E: \"FocalPlaneXResolution\",\n    // Number of pixels in width direction per FocalPlaneResolutionUnit\n    0xA20F: \"FocalPlaneYResolution\",\n    // Number of pixels in height direction per FocalPlaneResolutionUnit\n    0xA210: \"FocalPlaneResolutionUnit\",\n    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n    0xA214: \"SubjectLocation\",\n    // Location of subject in image\n    0xA215: \"ExposureIndex\",\n    // Exposure index selected on camera\n    0xA217: \"SensingMethod\",\n    // Image sensor type\n    0xA300: \"FileSource\",\n    // Image source (3 == DSC)\n    0xA301: \"SceneType\",\n    // Scene type (1 == directly photographed)\n    0xA302: \"CFAPattern\",\n    // Color filter array geometric pattern\n    0xA401: \"CustomRendered\",\n    // Special processing\n    0xA402: \"ExposureMode\",\n    // Exposure mode\n    0xA403: \"WhiteBalance\",\n    // 1 = auto white balance, 2 = manual\n    0xA404: \"DigitalZoomRation\",\n    // Digital zoom ratio\n    0xA405: \"FocalLengthIn35mmFilm\",\n    // Equivalent foacl length assuming 35mm film camera (in mm)\n    0xA406: \"SceneCaptureType\",\n    // Type of scene\n    0xA407: \"GainControl\",\n    // Degree of overall image gain adjustment\n    0xA408: \"Contrast\",\n    // Direction of contrast processing applied by camera\n    0xA409: \"Saturation\",\n    // Direction of saturation processing applied by camera\n    0xA40A: \"Sharpness\",\n    // Direction of sharpness processing applied by camera\n    0xA40B: \"DeviceSettingDescription\",\n    //\n    0xA40C: \"SubjectDistanceRange\",\n    // Distance to subject\n\n    // other tags\n    0xA005: \"InteroperabilityIFDPointer\",\n    0xA420: \"ImageUniqueID\" // Identifier assigned uniquely to each image\n  };\n\n  var TiffTags = EXIF.TiffTags = {\n    0x0100: \"ImageWidth\",\n    0x0101: \"ImageHeight\",\n    0x8769: \"ExifIFDPointer\",\n    0x8825: \"GPSInfoIFDPointer\",\n    0xA005: \"InteroperabilityIFDPointer\",\n    0x0102: \"BitsPerSample\",\n    0x0103: \"Compression\",\n    0x0106: \"PhotometricInterpretation\",\n    0x0112: \"Orientation\",\n    0x0115: \"SamplesPerPixel\",\n    0x011C: \"PlanarConfiguration\",\n    0x0212: \"YCbCrSubSampling\",\n    0x0213: \"YCbCrPositioning\",\n    0x011A: \"XResolution\",\n    0x011B: \"YResolution\",\n    0x0128: \"ResolutionUnit\",\n    0x0111: \"StripOffsets\",\n    0x0116: \"RowsPerStrip\",\n    0x0117: \"StripByteCounts\",\n    0x0201: \"JPEGInterchangeFormat\",\n    0x0202: \"JPEGInterchangeFormatLength\",\n    0x012D: \"TransferFunction\",\n    0x013E: \"WhitePoint\",\n    0x013F: \"PrimaryChromaticities\",\n    0x0211: \"YCbCrCoefficients\",\n    0x0214: \"ReferenceBlackWhite\",\n    0x0132: \"DateTime\",\n    0x010E: \"ImageDescription\",\n    0x010F: \"Make\",\n    0x0110: \"Model\",\n    0x0131: \"Software\",\n    0x013B: \"Artist\",\n    0x8298: \"Copyright\"\n  };\n  var GPSTags = EXIF.GPSTags = {\n    0x0000: \"GPSVersionID\",\n    0x0001: \"GPSLatitudeRef\",\n    0x0002: \"GPSLatitude\",\n    0x0003: \"GPSLongitudeRef\",\n    0x0004: \"GPSLongitude\",\n    0x0005: \"GPSAltitudeRef\",\n    0x0006: \"GPSAltitude\",\n    0x0007: \"GPSTimeStamp\",\n    0x0008: \"GPSSatellites\",\n    0x0009: \"GPSStatus\",\n    0x000A: \"GPSMeasureMode\",\n    0x000B: \"GPSDOP\",\n    0x000C: \"GPSSpeedRef\",\n    0x000D: \"GPSSpeed\",\n    0x000E: \"GPSTrackRef\",\n    0x000F: \"GPSTrack\",\n    0x0010: \"GPSImgDirectionRef\",\n    0x0011: \"GPSImgDirection\",\n    0x0012: \"GPSMapDatum\",\n    0x0013: \"GPSDestLatitudeRef\",\n    0x0014: \"GPSDestLatitude\",\n    0x0015: \"GPSDestLongitudeRef\",\n    0x0016: \"GPSDestLongitude\",\n    0x0017: \"GPSDestBearingRef\",\n    0x0018: \"GPSDestBearing\",\n    0x0019: \"GPSDestDistanceRef\",\n    0x001A: \"GPSDestDistance\",\n    0x001B: \"GPSProcessingMethod\",\n    0x001C: \"GPSAreaInformation\",\n    0x001D: \"GPSDateStamp\",\n    0x001E: \"GPSDifferential\"\n  };\n\n  // EXIF 2.3 Spec\n  var IFD1Tags = EXIF.IFD1Tags = {\n    0x0100: \"ImageWidth\",\n    0x0101: \"ImageHeight\",\n    0x0102: \"BitsPerSample\",\n    0x0103: \"Compression\",\n    0x0106: \"PhotometricInterpretation\",\n    0x0111: \"StripOffsets\",\n    0x0112: \"Orientation\",\n    0x0115: \"SamplesPerPixel\",\n    0x0116: \"RowsPerStrip\",\n    0x0117: \"StripByteCounts\",\n    0x011A: \"XResolution\",\n    0x011B: \"YResolution\",\n    0x011C: \"PlanarConfiguration\",\n    0x0128: \"ResolutionUnit\",\n    0x0201: \"JpegIFOffset\",\n    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n    0x0202: \"JpegIFByteCount\",\n    // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n    0x0211: \"YCbCrCoefficients\",\n    0x0212: \"YCbCrSubSampling\",\n    0x0213: \"YCbCrPositioning\",\n    0x0214: \"ReferenceBlackWhite\"\n  };\n  var StringValues = EXIF.StringValues = {\n    ExposureProgram: {\n      0: \"Not defined\",\n      1: \"Manual\",\n      2: \"Normal program\",\n      3: \"Aperture priority\",\n      4: \"Shutter priority\",\n      5: \"Creative program\",\n      6: \"Action program\",\n      7: \"Portrait mode\",\n      8: \"Landscape mode\"\n    },\n    MeteringMode: {\n      0: \"Unknown\",\n      1: \"Average\",\n      2: \"CenterWeightedAverage\",\n      3: \"Spot\",\n      4: \"MultiSpot\",\n      5: \"Pattern\",\n      6: \"Partial\",\n      255: \"Other\"\n    },\n    LightSource: {\n      0: \"Unknown\",\n      1: \"Daylight\",\n      2: \"Fluorescent\",\n      3: \"Tungsten (incandescent light)\",\n      4: \"Flash\",\n      9: \"Fine weather\",\n      10: \"Cloudy weather\",\n      11: \"Shade\",\n      12: \"Daylight fluorescent (D 5700 - 7100K)\",\n      13: \"Day white fluorescent (N 4600 - 5400K)\",\n      14: \"Cool white fluorescent (W 3900 - 4500K)\",\n      15: \"White fluorescent (WW 3200 - 3700K)\",\n      17: \"Standard light A\",\n      18: \"Standard light B\",\n      19: \"Standard light C\",\n      20: \"D55\",\n      21: \"D65\",\n      22: \"D75\",\n      23: \"D50\",\n      24: \"ISO studio tungsten\",\n      255: \"Other\"\n    },\n    Flash: {\n      0x0000: \"Flash did not fire\",\n      0x0001: \"Flash fired\",\n      0x0005: \"Strobe return light not detected\",\n      0x0007: \"Strobe return light detected\",\n      0x0009: \"Flash fired, compulsory flash mode\",\n      0x000D: \"Flash fired, compulsory flash mode, return light not detected\",\n      0x000F: \"Flash fired, compulsory flash mode, return light detected\",\n      0x0010: \"Flash did not fire, compulsory flash mode\",\n      0x0018: \"Flash did not fire, auto mode\",\n      0x0019: \"Flash fired, auto mode\",\n      0x001D: \"Flash fired, auto mode, return light not detected\",\n      0x001F: \"Flash fired, auto mode, return light detected\",\n      0x0020: \"No flash function\",\n      0x0041: \"Flash fired, red-eye reduction mode\",\n      0x0045: \"Flash fired, red-eye reduction mode, return light not detected\",\n      0x0047: \"Flash fired, red-eye reduction mode, return light detected\",\n      0x0049: \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n      0x004D: \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n      0x004F: \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n      0x0059: \"Flash fired, auto mode, red-eye reduction mode\",\n      0x005D: \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n      0x005F: \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n    },\n    SensingMethod: {\n      1: \"Not defined\",\n      2: \"One-chip color area sensor\",\n      3: \"Two-chip color area sensor\",\n      4: \"Three-chip color area sensor\",\n      5: \"Color sequential area sensor\",\n      7: \"Trilinear sensor\",\n      8: \"Color sequential linear sensor\"\n    },\n    SceneCaptureType: {\n      0: \"Standard\",\n      1: \"Landscape\",\n      2: \"Portrait\",\n      3: \"Night scene\"\n    },\n    SceneType: {\n      1: \"Directly photographed\"\n    },\n    CustomRendered: {\n      0: \"Normal process\",\n      1: \"Custom process\"\n    },\n    WhiteBalance: {\n      0: \"Auto white balance\",\n      1: \"Manual white balance\"\n    },\n    GainControl: {\n      0: \"None\",\n      1: \"Low gain up\",\n      2: \"High gain up\",\n      3: \"Low gain down\",\n      4: \"High gain down\"\n    },\n    Contrast: {\n      0: \"Normal\",\n      1: \"Soft\",\n      2: \"Hard\"\n    },\n    Saturation: {\n      0: \"Normal\",\n      1: \"Low saturation\",\n      2: \"High saturation\"\n    },\n    Sharpness: {\n      0: \"Normal\",\n      1: \"Soft\",\n      2: \"Hard\"\n    },\n    SubjectDistanceRange: {\n      0: \"Unknown\",\n      1: \"Macro\",\n      2: \"Close view\",\n      3: \"Distant view\"\n    },\n    FileSource: {\n      3: \"DSC\"\n    },\n    Components: {\n      0: \"\",\n      1: \"Y\",\n      2: \"Cb\",\n      3: \"Cr\",\n      4: \"R\",\n      5: \"G\",\n      6: \"B\"\n    }\n  };\n  function addEvent(element, event, handler) {\n    if (element.addEventListener) {\n      element.addEventListener(event, handler, false);\n    } else if (element.attachEvent) {\n      element.attachEvent(\"on\" + event, handler);\n    }\n  }\n  function imageHasData(img) {\n    return !!img.exifdata;\n  }\n  function base64ToArrayBuffer(base64, contentType) {\n    contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n    base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n    var binary = atob(base64);\n    var len = binary.length;\n    var buffer = new ArrayBuffer(len);\n    var view = new Uint8Array(buffer);\n    for (var i = 0; i < len; i++) {\n      view[i] = binary.charCodeAt(i);\n    }\n    return buffer;\n  }\n  function objectURLToBlob(url, callback) {\n    var http = new XMLHttpRequest();\n    http.open(\"GET\", url, true);\n    http.responseType = \"blob\";\n    http.onload = function (e) {\n      if (this.status == 200 || this.status === 0) {\n        callback(this.response);\n      }\n    };\n    http.send();\n  }\n  function getImageData(img, callback) {\n    function handleBinaryFile(binFile) {\n      var data = findEXIFinJPEG(binFile);\n      img.exifdata = data || {};\n      var iptcdata = findIPTCinJPEG(binFile);\n      img.iptcdata = iptcdata || {};\n      if (EXIF.isXmpEnabled) {\n        var xmpdata = findXMPinJPEG(binFile);\n        img.xmpdata = xmpdata || {};\n      }\n      if (callback) {\n        callback.call(img);\n      }\n    }\n    if (img.src) {\n      if (/^data\\:/i.test(img.src)) {\n        // Data URI\n        var arrayBuffer = base64ToArrayBuffer(img.src);\n        handleBinaryFile(arrayBuffer);\n      } else if (/^blob\\:/i.test(img.src)) {\n        // Object URL\n        var fileReader = new FileReader();\n        fileReader.onload = function (e) {\n          handleBinaryFile(e.target.result);\n        };\n        objectURLToBlob(img.src, function (blob) {\n          fileReader.readAsArrayBuffer(blob);\n        });\n      } else {\n        var http = new XMLHttpRequest();\n        http.onload = function () {\n          if (this.status == 200 || this.status === 0) {\n            handleBinaryFile(http.response);\n          } else {\n            throw \"Could not load image\";\n          }\n          http = null;\n        };\n        http.open(\"GET\", img.src, true);\n        http.responseType = \"arraybuffer\";\n        http.send(null);\n      }\n    } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n      var fileReader = new FileReader();\n      fileReader.onload = function (e) {\n        if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n        handleBinaryFile(e.target.result);\n      };\n      fileReader.readAsArrayBuffer(img);\n    }\n  }\n  function findEXIFinJPEG(file) {\n    var dataView = new DataView(file);\n    if (debug) console.log(\"Got file of length \" + file.byteLength);\n    if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {\n      if (debug) console.log(\"Not a valid JPEG\");\n      return false; // not a valid jpeg\n    }\n\n    var offset = 2,\n      length = file.byteLength,\n      marker;\n    while (offset < length) {\n      if (dataView.getUint8(offset) != 0xFF) {\n        if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n        return false; // not a valid marker, something is wrong\n      }\n\n      marker = dataView.getUint8(offset + 1);\n      if (debug) console.log(marker);\n\n      // we could implement handling for other markers here,\n      // but we're only looking for 0xFFE1 for EXIF data\n\n      if (marker == 225) {\n        if (debug) console.log(\"Found 0xFFE1 marker\");\n        return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n        // offset += 2 + file.getShortAt(offset+2, true);\n      } else {\n        offset += 2 + dataView.getUint16(offset + 2);\n      }\n    }\n  }\n  function findIPTCinJPEG(file) {\n    var dataView = new DataView(file);\n    if (debug) console.log(\"Got file of length \" + file.byteLength);\n    if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {\n      if (debug) console.log(\"Not a valid JPEG\");\n      return false; // not a valid jpeg\n    }\n\n    var offset = 2,\n      length = file.byteLength;\n    var isFieldSegmentStart = function isFieldSegmentStart(dataView, offset) {\n      return dataView.getUint8(offset) === 0x38 && dataView.getUint8(offset + 1) === 0x42 && dataView.getUint8(offset + 2) === 0x49 && dataView.getUint8(offset + 3) === 0x4D && dataView.getUint8(offset + 4) === 0x04 && dataView.getUint8(offset + 5) === 0x04;\n    };\n    while (offset < length) {\n      if (isFieldSegmentStart(dataView, offset)) {\n        // Get the length of the name header (which is padded to an even number of bytes)\n        var nameHeaderLength = dataView.getUint8(offset + 7);\n        if (nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n        // Check for pre photoshop 6 format\n        if (nameHeaderLength === 0) {\n          // Always 4\n          nameHeaderLength = 4;\n        }\n        var startOffset = offset + 8 + nameHeaderLength;\n        var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n        return readIPTCData(file, startOffset, sectionLength);\n        break;\n      }\n\n      // Not the marker, continue searching\n      offset++;\n    }\n  }\n  var IptcFieldMap = {\n    0x78: 'caption',\n    0x6E: 'credit',\n    0x19: 'keywords',\n    0x37: 'dateCreated',\n    0x50: 'byline',\n    0x55: 'bylineTitle',\n    0x7A: 'captionWriter',\n    0x69: 'headline',\n    0x74: 'copyright',\n    0x0F: 'category'\n  };\n  function readIPTCData(file, startOffset, sectionLength) {\n    var dataView = new DataView(file);\n    var data = {};\n    var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n    var segmentStartPos = startOffset;\n    while (segmentStartPos < startOffset + sectionLength) {\n      if (dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos + 1) === 0x02) {\n        segmentType = dataView.getUint8(segmentStartPos + 2);\n        if (segmentType in IptcFieldMap) {\n          dataSize = dataView.getInt16(segmentStartPos + 3);\n          segmentSize = dataSize + 5;\n          fieldName = IptcFieldMap[segmentType];\n          fieldValue = getStringFromDB(dataView, segmentStartPos + 5, dataSize);\n          // Check if we already stored a value with this name\n          if (data.hasOwnProperty(fieldName)) {\n            // Value already stored with this name, create multivalue field\n            if (data[fieldName] instanceof Array) {\n              data[fieldName].push(fieldValue);\n            } else {\n              data[fieldName] = [data[fieldName], fieldValue];\n            }\n          } else {\n            data[fieldName] = fieldValue;\n          }\n        }\n      }\n      segmentStartPos++;\n    }\n    return data;\n  }\n  function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n    var entries = file.getUint16(dirStart, !bigEnd),\n      tags = {},\n      entryOffset,\n      tag,\n      i;\n    for (i = 0; i < entries; i++) {\n      entryOffset = dirStart + i * 12 + 2;\n      tag = strings[file.getUint16(entryOffset, !bigEnd)];\n      if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n      tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n    }\n    return tags;\n  }\n  function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n    var type = file.getUint16(entryOffset + 2, !bigEnd),\n      numValues = file.getUint32(entryOffset + 4, !bigEnd),\n      valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart,\n      offset,\n      vals,\n      val,\n      n,\n      numerator,\n      denominator;\n    switch (type) {\n      case 1: // byte, 8-bit unsigned int\n      case 7:\n        // undefined, 8-bit byte, value depending on field\n        if (numValues == 1) {\n          return file.getUint8(entryOffset + 8, !bigEnd);\n        } else {\n          offset = numValues > 4 ? valueOffset : entryOffset + 8;\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getUint8(offset + n);\n          }\n          return vals;\n        }\n      case 2:\n        // ascii, 8-bit byte\n        offset = numValues > 4 ? valueOffset : entryOffset + 8;\n        return getStringFromDB(file, offset, numValues - 1);\n      case 3:\n        // short, 16 bit int\n        if (numValues == 1) {\n          return file.getUint16(entryOffset + 8, !bigEnd);\n        } else {\n          offset = numValues > 2 ? valueOffset : entryOffset + 8;\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\n          }\n          return vals;\n        }\n      case 4:\n        // long, 32 bit int\n        if (numValues == 1) {\n          return file.getUint32(entryOffset + 8, !bigEnd);\n        } else {\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\n          }\n          return vals;\n        }\n      case 5:\n        // rational = two long values, first is numerator, second is denominator\n        if (numValues == 1) {\n          numerator = file.getUint32(valueOffset, !bigEnd);\n          denominator = file.getUint32(valueOffset + 4, !bigEnd);\n          val = new Number(numerator / denominator);\n          val.numerator = numerator;\n          val.denominator = denominator;\n          return val;\n        } else {\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\n            denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\n            vals[n] = new Number(numerator / denominator);\n            vals[n].numerator = numerator;\n            vals[n].denominator = denominator;\n          }\n          return vals;\n        }\n      case 9:\n        // slong, 32 bit signed int\n        if (numValues == 1) {\n          return file.getInt32(entryOffset + 8, !bigEnd);\n        } else {\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\n          }\n          return vals;\n        }\n      case 10:\n        // signed rational, two slongs, first is numerator, second is denominator\n        if (numValues == 1) {\n          return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset + 4, !bigEnd);\n        } else {\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getInt32(valueOffset + 8 * n, !bigEnd) / file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\n          }\n          return vals;\n        }\n    }\n  }\n\n  /**\n  * Given an IFD (Image File Directory) start offset\n  * returns an offset to next IFD or 0 if it's the last IFD.\n  */\n  function getNextIFDOffset(dataView, dirStart, bigEnd) {\n    //the first 2bytes means the number of directory entries contains in this IFD\n    var entries = dataView.getUint16(dirStart, !bigEnd);\n\n    // After last directory entry, there is a 4bytes of data,\n    // it means an offset to next IFD.\n    // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n    return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n  }\n\n  function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd) {\n    // get the IFD1 offset\n    var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart + firstIFDOffset, bigEnd);\n    if (!IFD1OffsetPointer) {\n      // console.log('******** IFD1Offset is empty, image thumb not found ********');\n      return {};\n    } else if (IFD1OffsetPointer > dataView.byteLength) {\n      // this should not happen\n      // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n      return {};\n    }\n    // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n    var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd);\n\n    // EXIF 2.3 specification for JPEG format thumbnail\n\n    // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n    // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n    // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n    // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n    // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n    if (thumbTags['Compression']) {\n      // console.log('Thumbnail image found!');\n\n      switch (thumbTags['Compression']) {\n        case 6:\n          // console.log('Thumbnail image format is JPEG');\n          if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n            // extract the thumbnail\n            var tOffset = tiffStart + thumbTags.JpegIFOffset;\n            var tLength = thumbTags.JpegIFByteCount;\n            thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n              type: 'image/jpeg'\n            });\n          }\n          break;\n        case 1:\n          console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n          break;\n        default:\n          console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n      }\n    } else if (thumbTags['PhotometricInterpretation'] == 2) {\n      console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n    }\n    return thumbTags;\n  }\n  function getStringFromDB(buffer, start, length) {\n    var outstr = \"\";\n    for (n = start; n < start + length; n++) {\n      outstr += String.fromCharCode(buffer.getUint8(n));\n    }\n    return outstr;\n  }\n  function readEXIFData(file, start) {\n    if (getStringFromDB(file, start, 4) != \"Exif\") {\n      if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n      return false;\n    }\n    var bigEnd,\n      tags,\n      tag,\n      exifData,\n      gpsData,\n      tiffOffset = start + 6;\n\n    // test for TIFF validity and endianness\n    if (file.getUint16(tiffOffset) == 0x4949) {\n      bigEnd = false;\n    } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n      bigEnd = true;\n    } else {\n      if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n      return false;\n    }\n    if (file.getUint16(tiffOffset + 2, !bigEnd) != 0x002A) {\n      if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n      return false;\n    }\n    var firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\n    if (firstIFDOffset < 0x00000008) {\n      if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset + 4, !bigEnd));\n      return false;\n    }\n    tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n    if (tags.ExifIFDPointer) {\n      exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n      for (tag in exifData) {\n        switch (tag) {\n          case \"LightSource\":\n          case \"Flash\":\n          case \"MeteringMode\":\n          case \"ExposureProgram\":\n          case \"SensingMethod\":\n          case \"SceneCaptureType\":\n          case \"SceneType\":\n          case \"CustomRendered\":\n          case \"WhiteBalance\":\n          case \"GainControl\":\n          case \"Contrast\":\n          case \"Saturation\":\n          case \"Sharpness\":\n          case \"SubjectDistanceRange\":\n          case \"FileSource\":\n            exifData[tag] = StringValues[tag][exifData[tag]];\n            break;\n          case \"ExifVersion\":\n          case \"FlashpixVersion\":\n            exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n            break;\n          case \"ComponentsConfiguration\":\n            exifData[tag] = StringValues.Components[exifData[tag][0]] + StringValues.Components[exifData[tag][1]] + StringValues.Components[exifData[tag][2]] + StringValues.Components[exifData[tag][3]];\n            break;\n        }\n        tags[tag] = exifData[tag];\n      }\n    }\n    if (tags.GPSInfoIFDPointer) {\n      gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n      for (tag in gpsData) {\n        switch (tag) {\n          case \"GPSVersionID\":\n            gpsData[tag] = gpsData[tag][0] + \".\" + gpsData[tag][1] + \".\" + gpsData[tag][2] + \".\" + gpsData[tag][3];\n            break;\n        }\n        tags[tag] = gpsData[tag];\n      }\n    }\n\n    // extract thumbnail\n    tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n    return tags;\n  }\n  function findXMPinJPEG(file) {\n    if (!('DOMParser' in self)) {\n      // console.warn('XML parsing not supported without DOMParser');\n      return;\n    }\n    var dataView = new DataView(file);\n    if (debug) console.log(\"Got file of length \" + file.byteLength);\n    if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {\n      if (debug) console.log(\"Not a valid JPEG\");\n      return false; // not a valid jpeg\n    }\n\n    var offset = 2,\n      length = file.byteLength,\n      dom = new DOMParser();\n    while (offset < length - 4) {\n      if (getStringFromDB(dataView, offset, 4) == \"http\") {\n        var startOffset = offset - 1;\n        var sectionLength = dataView.getUint16(offset - 2) - 1;\n        var xmpString = getStringFromDB(dataView, startOffset, sectionLength);\n        var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n        xmpString = xmpString.substring(xmpString.indexOf('<x:xmpmeta'), xmpEndIndex);\n        var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10;\n        //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n        //Without these namespaces, XML is thought to be invalid by parsers\n        xmpString = xmpString.slice(0, indexOfXmp) + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" ' + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" ' + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" ' + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" ' + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" ' + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" ' + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" ' + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" ' + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" ' + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" ' + xmpString.slice(indexOfXmp);\n        var domDocument = dom.parseFromString(xmpString, 'text/xml');\n        return xml2Object(domDocument);\n      } else {\n        offset++;\n      }\n    }\n  }\n  function xml2json(xml) {\n    var json = {};\n    if (xml.nodeType == 1) {\n      // element node\n      if (xml.attributes.length > 0) {\n        json['@attributes'] = {};\n        for (var j = 0; j < xml.attributes.length; j++) {\n          var attribute = xml.attributes.item(j);\n          json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n        }\n      }\n    } else if (xml.nodeType == 3) {\n      // text node\n      return xml.nodeValue;\n    }\n\n    // deal with children\n    if (xml.hasChildNodes()) {\n      for (var i = 0; i < xml.childNodes.length; i++) {\n        var child = xml.childNodes.item(i);\n        var nodeName = child.nodeName;\n        if (json[nodeName] == null) {\n          json[nodeName] = xml2json(child);\n        } else {\n          if (json[nodeName].push == null) {\n            var old = json[nodeName];\n            json[nodeName] = [];\n            json[nodeName].push(old);\n          }\n          json[nodeName].push(xml2json(child));\n        }\n      }\n    }\n    return json;\n  }\n  function xml2Object(xml) {\n    try {\n      var obj = {};\n      if (xml.children.length > 0) {\n        for (var i = 0; i < xml.children.length; i++) {\n          var item = xml.children.item(i);\n          var attributes = item.attributes;\n          for (var idx in attributes) {\n            var itemAtt = attributes[idx];\n            var dataKey = itemAtt.nodeName;\n            var dataValue = itemAtt.nodeValue;\n            if (dataKey !== undefined) {\n              obj[dataKey] = dataValue;\n            }\n          }\n          var nodeName = item.nodeName;\n          if (typeof obj[nodeName] == \"undefined\") {\n            obj[nodeName] = xml2json(item);\n          } else {\n            if (typeof obj[nodeName].push == \"undefined\") {\n              var old = obj[nodeName];\n              obj[nodeName] = [];\n              obj[nodeName].push(old);\n            }\n            obj[nodeName].push(xml2json(item));\n          }\n        }\n      } else {\n        obj = xml.textContent;\n      }\n      return obj;\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n  EXIF.enableXmp = function () {\n    EXIF.isXmpEnabled = true;\n  };\n  EXIF.disableXmp = function () {\n    EXIF.isXmpEnabled = false;\n  };\n  EXIF.getData = function (img, callback) {\n    if ((self.Image && img instanceof self.Image || self.HTMLImageElement && img instanceof self.HTMLImageElement) && !img.complete) return false;\n    if (!imageHasData(img)) {\n      getImageData(img, callback);\n    } else {\n      if (callback) {\n        callback.call(img);\n      }\n    }\n    return true;\n  };\n  EXIF.getTag = function (img, tag) {\n    if (!imageHasData(img)) return;\n    return img.exifdata[tag];\n  };\n  EXIF.getIptcTag = function (img, tag) {\n    if (!imageHasData(img)) return;\n    return img.iptcdata[tag];\n  };\n  EXIF.getAllTags = function (img) {\n    if (!imageHasData(img)) return {};\n    var a,\n      data = img.exifdata,\n      tags = {};\n    for (a in data) {\n      if (data.hasOwnProperty(a)) {\n        tags[a] = data[a];\n      }\n    }\n    return tags;\n  };\n  EXIF.getAllIptcTags = function (img) {\n    if (!imageHasData(img)) return {};\n    var a,\n      data = img.iptcdata,\n      tags = {};\n    for (a in data) {\n      if (data.hasOwnProperty(a)) {\n        tags[a] = data[a];\n      }\n    }\n    return tags;\n  };\n  EXIF.pretty = function (img) {\n    if (!imageHasData(img)) return \"\";\n    var a,\n      data = img.exifdata,\n      strPretty = \"\";\n    for (a in data) {\n      if (data.hasOwnProperty(a)) {\n        if (_typeof(data[a]) == \"object\") {\n          if (data[a] instanceof Number) {\n            strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n          } else {\n            strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n          }\n        } else {\n          strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n        }\n      }\n    }\n    return strPretty;\n  };\n  EXIF.readFromBinaryFile = function (file) {\n    return findEXIFinJPEG(file);\n  };\n  if (typeof define === 'function' && define.amd) {\n    define('exif-js', [], function () {\n      return EXIF;\n    });\n  }\n}).call(this);","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import clsx from'clsx';import React from'react';import{FormattedMessage}from'react-intl';import{spring}from'react-motion';import{Icon,Stack,Text}from'soapbox/components/ui';import Motion from'../util/optional-motion';/** Component to display when a file is dragged over the UI. */var UploadArea=function UploadArea(_ref){var active=_ref.active,onClose=_ref.onClose;var handleKeyUp=function handleKeyUp(e){var keyCode=e.keyCode;if(active){switch(keyCode){case 27:e.preventDefault();e.stopPropagation();onClose();break;}}};React.useEffect(function(){window.addEventListener('keyup',handleKeyUp,false);return function(){return window.removeEventListener('keyup',handleKeyUp);};},[]);return/*#__PURE__*/_jsx(Motion,{defaultStyle:{backgroundOpacity:0,backgroundScale:0.95},style:{backgroundOpacity:spring(active?1:0,{stiffness:150,damping:15}),backgroundScale:spring(active?1:0.95,{stiffness:200,damping:3})}},void 0,function(_ref2){var backgroundOpacity=_ref2.backgroundOpacity,backgroundScale=_ref2.backgroundScale;return/*#__PURE__*/_jsx(\"div\",{className:clsx({'flex items-center justify-center bg-gray-700/90 h-full w-full absolute left-0 top-0 z-1000 pointer-events-none':true,'visible':active,'invisible':!active}),style:{opacity:backgroundOpacity}},void 0,/*#__PURE__*/_jsx(\"div\",{className:\"relative flex h-40 w-80 p-2\"},void 0,/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0\",style:{transform:\"scale(\".concat(backgroundScale,\")\")}}),/*#__PURE__*/_jsx(Stack,{space:3,justifyContent:\"center\",alignItems:\"center\"},void 0,/*#__PURE__*/_jsx(Icon,{src:require('@tabler/icons/cloud-upload.svg'),className:\"h-12 w-12 text-white/90\"}),/*#__PURE__*/_jsx(Text,{size:\"xl\",theme:\"white\"},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"upload_area.title\",defaultMessage:\"Drag & drop to upload\"})))));});};export default UploadArea;"],"names":["EXIF","obj","this","EXIFwrapped","module","exports","ExifTags","Tags","TiffTags","GPSTags","IFD1Tags","StringValues","ExposureProgram","MeteringMode","LightSource","Flash","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","imageHasData","img","exifdata","getImageData","callback","handleBinaryFile","binFile","data","findEXIFinJPEG","iptcdata","file","dataView","DataView","getUint8","offset","length","byteLength","isFieldSegmentStart","nameHeaderLength","readIPTCData","getUint16","findIPTCinJPEG","isXmpEnabled","xmpdata","self","dom","DOMParser","getStringFromDB","startOffset","sectionLength","xmpString","xmpEndIndex","indexOf","indexOfXmp","substring","slice","xml2Object","parseFromString","findXMPinJPEG","call","src","test","base64","contentType","match","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","base64ToArrayBuffer","fileReader","FileReader","onload","e","target","result","url","http","XMLHttpRequest","open","responseType","blob","status","response","readAsArrayBuffer","send","objectURLToBlob","Blob","File","readEXIFData","IptcFieldMap","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","hasOwnProperty","Array","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","entries","tags","readTagValue","vals","val","n","numerator","denominator","type","numValues","getUint32","valueOffset","Number","getInt32","start","outstr","String","fromCharCode","tag","exifData","gpsData","tiffOffset","firstIFDOffset","ExifIFDPointer","GPSInfoIFDPointer","IFD1OffsetPointer","getNextIFDOffset","thumbTags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","console","log","readThumbnailImage","xml2json","xml","json","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","child","old","children","idx","itemAtt","dataKey","dataValue","undefined","textContent","message","enableXmp","disableXmp","getData","Image","HTMLImageElement","complete","getTag","getIptcTag","getAllTags","a","getAllIptcTags","pretty","strPretty","_typeof","readFromBinaryFile","_ref","active","onClose","handleKeyUp","keyCode","preventDefault","stopPropagation","window","addEventListener","removeEventListener","defaultStyle","backgroundOpacity","backgroundScale","style","stiffness","damping","_ref2","className","opacity","transform","concat","space","justifyContent","alignItems","size","theme","id","defaultMessage"],"sourceRoot":""}